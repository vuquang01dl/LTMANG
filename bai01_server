#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <unistd.h>
#include <netdb.h>
#include <string.h>
#define BUFFER_SIZE 1024    
int main() 
{
    char buffer[BUFFER_SIZE];
    // Tao socket
    int listener = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
    if (listener != -1)
        printf("Socket created: %d\n", listener);
    else
    {
        printf("Failed to create socket.\n");
        exit(1);
    }

    // Khai bao cau truc dia chi server
    struct sockaddr_in addr;
    addr.sin_family = AF_INET;
    addr.sin_addr.s_addr = htonl(INADDR_ANY);
    addr.sin_port = htons(9000);

    // Gan dia chi voi socket
    if (bind(listener, (struct sockaddr *)&addr, sizeof(addr))) 
    {
        printf("bind() failed.\n");
        exit(1);
    }

    if (listen(listener, 5)) 
    {
        printf("listen() failed.\n");
        exit(1);
    }

    printf("Waiting for a new client ...\n");

    // Chap nhan ket noi
    int client = accept(listener, NULL, NULL);
    if (client == -1)
    {
        printf("accept() failed.\n");
        exit(1);
    }
    printf("New client connected: %d\n", client);

    // Nhan du lieu tu client
 int num_bytes;
    while ((num_bytes = recv(client, buffer, BUFFER_SIZE, 0)) > 0) {
        buffer[num_bytes] = '\0';
        printf("Nhận từ client: %s", buffer);
    }

    // Them ky tu ket thuc xau va in ra man hinh
    if (num_bytes < sizeof(buffer))
    buffer[num_bytes] = 0;
    puts(buffer);

    // Gui du lieu sang client
    send(client, buffer, strlen(buffer), 0);
    
    // Dong ket noi
    close(client);
    close(listener);    

    return 0;
}
